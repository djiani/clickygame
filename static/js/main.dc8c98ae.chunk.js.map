{"version":3,"sources":["components/Header.js","components/Image.js","components/Game.js","components/utils/API.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","description","desc","error","react_default","a","createElement","className","Fragment","onClick","score","topScore","level","Image","src","img_url","alt","Game","CharactersList","CharactersData","map","index","components_Image","click","key","characters","API","search","query","Math","floor","random","length","axios","get","Footer","href","App","state","Characters","CharactersClick","gameDesc","GetGiphy","then","res","data","images","fixed_height_still","url","_this","setState","catch","err","console","log","handleImageClick","e","_this$state","curElt","target","includes","push","alert","shuffeArray","newArr","slice","shuffeArr","indexToPush","eltRemove","splice","handleCliclyGame","this","components_Header","components_Game","Footer_Footer","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc8c98ae.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Header.css\"\n\nfunction Header(props){\n    let description = \"\"\n    if(props.desc !==\"\"){\n        if(props.error){\n            description = <p className=\"d-inline-flex game_des error animated bounce delay-2s\"> {props.desc}</p>\n        }else{\n            description = <p className=\"d-inline-flex game_des noerror animated bounce delay-2s\"> {props.desc}</p>\n        }\n    }else{\n        description =(<>\n            <h5>Could Remember all your privious Click?</h5>\n            <p>Click on a image to earn points! Don't click to an image more than Once!</p>\n            </>\n        ) ;\n    }\n\n    return (\n        <div className=\"header\">\n            <div className=\"row\">\n                <div className=\"col-12 col-sm-6 game_startBtn\" onClick={props.onClick}>\n                    <h3 className=\"band\">Cliky Game</h3>\n                </div>\n                \n                <div className=\"col-12 col-sm-6 game_score\">\n                    <h3>Score: <span className=\"badge badge-info\">{props.score}</span> | \n                        Top Score: <span className=\"badge badge-danger\">{props.topScore}</span> | \n                        Level: <span className=\"badge badge-danger\">{props.level}</span></h3> \n                </div>\n            </div>\n            <hr/>\n            <div className=\"row\">\n                <div className=\"col-12 game_desc\">\n                    {description}\n                </div>\n                    \n            </div>\n           \n        </div>\n    )\n}\nexport default Header;","import React from 'react';\nimport \"./Image.css\";\n\n\nfunction Image(props){\n    \n    return (\n        <img src={props.img_url}   className=\" img-thumbnail imageStyle animated jello \" alt={props.img_url} onClick={props.onClick} />\n    );\n}\n\nexport default Image;","import React from 'react';\nimport Image from './Image';\nimport './Game.css';\n\n\nfunction Game(props){\n    const CharactersList = props.CharactersData.map(function(img_url, index){\n    return <Image img_url={img_url} onClick={props.click} key={index}  />\n    })\n\n    return (\n        <div className=\"container\">\n            <div className=\"game\">\n                {CharactersList}\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Game;","import axios from \"axios\";\n// const BASEURL = \"http://api.giphy.com/v1/stickers/search?api_key=5f2qiYkKasRM65bApSg9R42vbXi57BSJ\";\n// const APIKEY = \"5f2qiYkKasRM65bApSg9R42vbXi57BSJ\";\n\n// const url = \"http://api.giphy.com/v1/gifs/search?api_key=5f2qiYkKasRM65bApSg9R42vbXi57BSJ&q=dog\"\n\n\nconst url = \"https://api.giphy.com/v1/gifs/search?api_key=5f2qiYkKasRM65bApSg9R42vbXi57BSJ&q=\";\nconst characters = [\"superhero\", \"dogs\", \"cats\", \"tom and jerry\", \"flogs\", \"clown\"]\nexport default {\n  search: function(level) {\n    let query = characters[Math.floor(Math.random()*characters.length)]\n    return axios.get(url+query+\"&limit=\"+level);\n  }\n};\n\n\n\n\n","import React from 'react';\nimport './Footer.css';\n\nexport default function Footer(props){\n    return (\n        <div className=\"footerPage\">\n            <div className=\"socialMedia\">\n                <a href=\"#\" className=\"fa fa-facebook\"></a>\n                <a href=\"#\" className=\"fa fa-twitter\"></a>\n                <a href=\"#\" className=\"fa fa-google\"></a>\n                <a href=\"#\" className=\"fa fa-linkedin\"></a>\n                <a href=\"#\" className=\"fa fa-youtube\"></a>\n                <a href=\"#\" className=\"fa fa-instagram\"></a>\n                <a href=\"#\" className=\"fa fa-skype\"></a>\n                <a href=\"#\" className=\"fa fa-github\"></a>\n            </div>\n            <p>Samuel Djiani-- Copyright @ 2019 GT-Coding Bootcamp</p>\n        </div>\n    )\n}","import React from \"react\";\nimport Header from \"./components/Header\";\n import Game from './components/Game';\nimport API from './components/utils/API';\nimport Footer from './components/Footer';\n\n\nimport  './App.css';\n\nclass App extends React.Component{\n    state = {\n        Characters:[], \n        score:0,\n        topScore:0,\n        CharactersClick: [],\n        gameDesc:\"\",\n        error : false,\n        level: 1\n\n\n    }\n\n    GetGiphy = (level) => {\n        API.search(level*2)\n          .then(res => {\n            //console.log(res);\n            const Characters = res.data.data.map( data=>{\n                return data.images.fixed_height_still.url\n            })\n\n            this.setState({ \n                Characters: Characters,\n                score:0,\n                topScore:0,\n                CharactersClick: [],\n                gameDesc:\"\",\n                error : false,\n                level: level\n                });\n          })\n          .catch(err => console.log(err));\n    };\n\n    handleImageClick = (e)=>{\n        let {score, topScore, Characters, CharactersClick, gameDesc, error, level} = this.state;\n        const curElt = (e.target.src);\n        if(!CharactersClick.includes(curElt)){\n            CharactersClick.push(curElt);\n           score++;\n           gameDesc = \"You guessed Correctely!\";\n           error = false;\n           if(score > topScore){\n               topScore = score;\n           }\n           if(score === this.state.Characters.length){\n               //win game increase level!\n               alert('you complete level '+level+\"! Go to the next level\");\n               level++;\n               this.GetGiphy(level);\n           }else{\n                Characters = this.shuffeArray();\n                this.setState({Characters, score, topScore, CharactersClick, gameDesc, error});\n           }\n            \n           \n        }else{\n            score = 0;\n            gameDesc = \"You guessed Incorrectly!\";\n            error = true;\n            CharactersClick = [];\n            this.setState({Characters, score, topScore, CharactersClick, gameDesc, error});\n        }\n    }\n\n    shuffeArray = ()=>{\n        const newArr = this.state.Characters.slice();\n        const shuffeArr = [];\n        while(newArr.length > 0){\n            let indexToPush = Math.random()*newArr.length;\n            let eltRemove = newArr.splice(indexToPush, 1);\n            shuffeArr.push(eltRemove[0]);\n        }\n\n        return shuffeArr;\n    }\n\n    componentDidMount(){\n        this.GetGiphy(this.state.level);\n    }\n\n    handleCliclyGame = ()=>{\n        this.GetGiphy(1);\n    }\n\n    render(){\n        return (\n            <div className=\"main\">\n                 <Header \n                    score={this.state.score} \n                    topScore = {this.state.topScore}\n                    desc={this.state.gameDesc} \n                    error={this.state.error}\n                    level={this.state.level}\n                    onClick={this.handleCliclyGame}\n                 />\n                 <Game  CharactersData={this.state.Characters} click={this.handleImageClick}/>\n                 <Footer/>\n            </div>\n             \n         );\n    }\n}\n\nexport default App;\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}